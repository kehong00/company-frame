<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.codewoo.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="cn.codewoo.entity.SysUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="create_where" jdbcType="TINYINT" property="createWhere" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, salt, `password`, phone, dept_id, real_name, nick_name, email, `status`, 
    sex, deleted, create_id, update_id, create_where, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.codewoo.entity.SysUser">
    insert into sys_user (id, username, salt, 
      `password`, phone, dept_id, 
      real_name, nick_name, email, 
      `status`, sex, deleted, 
      create_id, update_id, create_where, 
      create_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{sex,jdbcType=TINYINT}, #{deleted,jdbcType=TINYINT}, 
      #{createId,jdbcType=VARCHAR}, #{updateId,jdbcType=VARCHAR}, #{createWhere,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.codewoo.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="createWhere != null">
        create_where,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createWhere != null">
        #{createWhere,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.codewoo.entity.SysUser">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createWhere != null">
        create_where = #{createWhere,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.codewoo.entity.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      sex = #{sex,jdbcType=TINYINT},
      deleted = #{deleted,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=VARCHAR},
      create_where = #{createWhere,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT <include refid="Base_Column_List"/>
    FROM sys_user
    WHERE username = #{username}
  </select>

<!--  查询所有记录-->
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM sys_user
    WHERE deleted != 0
  </select>

  <select id="selectDetailedById" resultMap="selectDetailedByIdResultMap" parameterType="string">
    select su.id su_id,su.username su_username,su.phone,su.dept_id,su.real_name,
           su.nick_name,su.email,su.status su_status,su.sex,su.deleted su_deleted,
           su.create_time su_c_time,su.update_time su_u_time,su.create_where,
           -- 角色表
           sr.id sr_id,sr.name sr_name,sr.description,sr.status sr_status,sr.create_time sr_c_time,
           sr.update_time sr_u_time,sr.deleted sr_delete,
           -- 权限表
           sp.id sp_id,sp.code,sp.name sp_name,sp.perms,sp.url,sp.method,sp.pid,sp.order_num,
           sp.type,sp.status sp_status,sp.create_time sp_c_time,sp.update_time sp_u_time,sp.deleted sp_delete
    from sys_user su
           left join sys_user_role sur on su.id = sur.user_id
           left join sys_role sr on sr.id = sur.role_id
           left join sys_role_permission srp on sr.id = srp.role_id
           left join sys_permission sp on sp.id = srp.permission_id
    where su.id = #{userId}
    order by sp.id asc
  </select>

  <resultMap id="selectDetailedByIdResultMap" type="cn.codewoo.entity.SysUser">
    <id column="su_id" property="id" jdbcType="VARCHAR"/>
    <result column="su_username" property="username" jdbcType="VARCHAR"/>
    <result column="phone" property="phone" jdbcType="VARCHAR"/>
    <result column="dept_id" property="deptId" jdbcType="VARCHAR"/>
    <result column="real_name" property="realName" jdbcType="VARCHAR"/>
    <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="su_status" property="status" jdbcType="INTEGER"/>
    <result column="sex" property="sex" jdbcType="INTEGER"/>
    <result column="su_deleted" property="deleted" jdbcType="INTEGER"/>
    <result column="su_c_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="su_u_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="create_where" property="createWhere" jdbcType="INTEGER"/>
    <collection property="sysRoleList" javaType="list" ofType="cn.codewoo.entity.SysRole">
      <id column="sr_id" property="id"/>
      <result column="sr_name" property="name" jdbcType="VARCHAR"/>
      <result column="description" property="description" jdbcType="VARCHAR"/>
      <result column="sr_status" property="status" jdbcType="INTEGER"/>
      <result column="sr_deleted" property="deleted" jdbcType="INTEGER"/>
      <result column="sr_c_time" property="createTime" jdbcType="TIMESTAMP"/>
      <result column="sr_u_time" property="updateTime" jdbcType="TIMESTAMP"/>
      <collection property="sysPermissionList" javaType="list" ofType="cn.codewoo.entity.SysPermission">
        <id column="sp_id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="sp_name" property="name" jdbcType="VARCHAR"/>
        <result column="perms" property="perms" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="method" property="method" jdbcType="VARCHAR"/>
        <result column="pid" property="pid" jdbcType="VARCHAR"/>
        <result column="pid" property="pid" jdbcType="VARCHAR"/>
        <result column="sp_status" property="status" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <result column="sp_deleted" property="deleted" jdbcType="INTEGER"/>
        <result column="sp_c_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="sp_u_time" property="updateTime" jdbcType="TIMESTAMP"/>
      </collection>
    </collection>

  </resultMap>

  <update id="updateDeleteById" parameterType="string">
    update sys_user set deleted = 0 where id = #{id}
  </update>
  
  <select id="userQuery" resultMap="BaseResultMap" parameterType="cn.codewoo.vo.req.UserPageReqVO">
    select <include refid="Base_Column_List"/>
    from sys_user
    <where>
    <if test="userId != null and userId != ''">
      id like concat('%',#{userId,jdbcType=VARCHAR},'%')
    </if>
    <if test="username != null and username != ''">
        and username like concat('%',#{username,jdbcType=VARCHAR},'%')
    </if>
    <if test="nickName != null and nickName != ''">
        and nick_name like concat('%',#{nickName,jdbcType=VARCHAR},'%')
    </if>
    <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
    </if>

    <if test="startTime != null and startTime != ''">
      and create_time &gt; #{startTime,jdbcType=TIMESTAMP}
    </if>

    <if test="endTime != null and endTime != ''">
      and create_time &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
    and `deleted` != 0
    </where>

  </select>
</mapper>